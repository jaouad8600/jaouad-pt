name: Build rapportage JSON
on:
  issues:
    types: [opened, edited, labeled, unlabeled]
  workflow_dispatch:
permissions:
  contents: write
  issues: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Zorg dat het label bestaat (case-insensitive), en voeg het toe bij 'opened'
      - name: Ensure label & auto-apply on opened
        uses: actions/github-script@v7
        with:
          script: |
            const want = "Rapportage";
            const {owner, repo} = context.repo;
            const labels = await github.paginate(github.rest.issues.listLabelsForRepo, {owner, repo, per_page: 100});
            const exists = labels.some(l => l.name.toLowerCase() === want.toLowerCase());
            if (!exists) {
              try { await github.rest.issues.createLabel({owner, repo, name: want, color: "FF7A00", description: "Ingevulde sport-rapportage"}); }
              catch(e){ core.warning(`createLabel failed: ${e.message}`); }
            }
            if (context.eventName === "issues" && context.payload.action === "opened") {
              try { await github.rest.issues.addLabels({owner, repo, issue_number: context.payload.issue.number, labels: [want]}); }
              catch(e){ core.warning(`addLabels failed: ${e.message}`); }
            }

      # Titel netjes maken op basis van form
      - name: Retitle issue from form fields
        if: github.event_name == 'issues'
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.issue?.body || "";
            function pick(label) {
              const re = new RegExp(String.raw`\\*\\*${label}\\*\\*[\\r\\n]+([\\s\\S]*?)(?=(\\*\\*.+?\\*\\*)|$)`);
              const m = re.exec(body);
              return m ? m[1].trim() : "";
            }
            const groep = pick("Groep") || "—";
            const datum = pick("Datum") || "—";
            const begeleider = pick("Begeleider") || "—";
            const desired = `[Rapportage] ${groep} — ${datum} — ${begeleider}`;
            if (context.payload.issue.title !== desired) {
              await github.rest.issues.update({owner: context.repo.owner, repo: context.repo.repo, issue_number: context.payload.issue.number, title: desired});
              core.info(`Title updated: ${desired}`);
            }

      - name: Build JSON (fetch API, geen npm nodig)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: node scripts/build.mjs

      - name: Copy JSON to docs
        run: |
          mkdir -p docs/data
          cp -f data/*.json docs/data/ || true

      - name: Commit & push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add data/*.json docs/data/*.json || true
          git commit -m "chore: update rapportage JSON" || echo "No changes"
          git push || true
